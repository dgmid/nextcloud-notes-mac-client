{"version":3,"names":[],"mappings":"","sources":["window-prefs.js"],"sourcesContent":["'use strict'\n\nconst { app, BrowserWindow } = require('electron')\nconst url\t\t= require( 'url' )\nconst path\t\t= require( 'path' )\nconst log\t\t= require( 'electron-log' )\n\nconst touchbar\t= require( './touchbar.min' )\n\nlet prefs = null\n\n\nmodule.exports.openPrefs = function() {\n\t\n\tif( prefs === null ) {\n\t\t\n\t\tprefs = new BrowserWindow({\n\t\t\t\n\t\t\twidth: 548,\n\t\t\theight: 474,\n\t\t\tresizable: false,\n\t\t\tminimizable: false,\n\t\t\tmaximizable: false,\n\t\t\tshow: false,\n\t\t\tvibrancy: 'window',\n\t\t\twebPreferences: {\n\t\t\t\tdevTools: true,\n\t\t\t\tnodeIntegration: true,\n\t\t\t\tenableRemoteModule: true,\n\t\t\t\tcontextIsolation: false,\n\t\t\t\tpreload: path.join(__dirname, './preload.min.js')\n\t\t\t},\n\t\t})\n\t\t\n\t\tprefs.loadURL(url.format ({ \n\t\t\t\n\t\t\tpathname: path.join(__dirname, '../html/prefs.html'), \n\t\t\tprotocol: 'file:', \n\t\t\tslashes: true \n\t\t}))\n\t\t\n\t\tprefs.once('ready-to-show', () => {\n\t\t\t\n\t\t\tprefs.show()\n\t\t\ttouchbar.prefsTouchbar( prefs )\n\t\t})\n\t\t\n\t\tprefs.webContents.on('did-fail-load', () => {\n\t\t\t\n\t\t\tlog.error( `prefs window did not load` )\n\t\t})\n\t\t\n\t\tprefs.webContents.on( 'crashed', ( event, killed ) => {\n\t\t\t\n\t\t\tlog.info( `prefs window has crashed:` )\n\t\t\tlog.error( event )\n\t\t})\n\t\t\n\t\tprefs.on( 'unresponsive', () => {\n\t\t\t\n\t\t\tlog.info( `prefs window is not respondingâ€¦` )\n\t\t})\n\t\t\n\t\tprefs.on( 'responsive', () => {\n\t\t\t\n\t\t\tlog.info( `prefs window is responding` )\n\t\t})\n\t\t\n\t\tprefs.on('close', () => {\n\t\t\tprefs = null\n\t\t})\n\t\n\t} else {\n\t\t\n\t\tprefs.focus()\n\t}\n}\n\n\napp.on('close-prefs', () => {\n\t\n\tprefs.close()\n})\n"],"file":"../window-prefs.min.js"}